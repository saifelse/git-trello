#!/usr/bin/env python

from subprocess import Popen, PIPE
import sys
import re

import requests

class ConfigAttributeError(AttributeError):
  def __init__(self, section, prop):
    self.prop = '%s.%s' % (section, prop)
    self.cmd = 'git config %s "%s"' % (self.prop, prop)
    self.msg = '%s not found in git configuration.' % prop
    super(ConfigAttributeError, self).__init__(self, self.msg)

def git_config(section, prop):
  """Returns the value of a property set in the git configuration"""
  pipe = Popen('git config %s.%s' % (section, prop), stdout=PIPE, shell=True)
  value = pipe.stdout.read().strip()
  if not value:
    raise ConfigAttributeError(section, prop)
  return value

def git_last_log():
  pipe = Popen('git log -1 HEAD', stdout=PIPE, shell=True)
  return pipe.stdout.read()

def add_trello_card_comment(token, key, card_id, comment):
  params = {'token': token, 'key': key, 'text': comment}
  return requests.post('https://api.trello.com/1/cards/%s/actions/comments' % card_id,
                       params=params)

if __name__ == '__main__':
  try:
    trello_key = git_config('trello', 'key')
    trello_token = git_config('trello', 'token')
  except ConfigAttributeError as e:
    message = '%s\nRun:\n\n    %s\n' % (e.msg, e.cmd)
    sys.stderr.write(message)
    sys.exit(1)
  log = git_last_log()
  cards = re.findall('<(https://trello.com/c/(.*?))>', log)
  for url, card in cards:
    print 'Referencing commit on trello card:',url
    # add_trello_card_comment(token=trello_token, key=trello_key,
    #                         card_id=card, comment=log)