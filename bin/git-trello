#!/usr/bin/env python

from subprocess import Popen, PIPE
import string
import sys

import requests

class ConfigAttributeError(AttributeError):
  def __init__(self, section, prop):
    self.prop = '%s.%s' % (section, prop)
    self.cmd = 'git config %s "%s"' % (self.prop, prop)
    self.msg = '%s not found in git configuration.' % prop
    super(ConfigAttributeError, self).__init__(self, self.msg)

def git_config(section, prop):
  """Returns the value of a property set in the git configuration"""
  pipe = Popen('git config %s.%s' % (section, prop), stdout=PIPE, shell=True)
  value = pipe.stdout.read().strip()
  if not value:
    raise ConfigAttributeError(section, prop)
  return value

def git_append(msg):
  """Appends msg to the last commit"""
  pipe = Popen('git log -1 --pretty=%B', stdout=PIPE, shell=True)
  old_msg = pipe.stdout.read()
  new_msg = '%s\n%s' % (old_msg.rstrip(), msg)

  pipe = Popen('git commit --amend --file=-', stdin=PIPE, shell=True)
  pipe.communicate(new_msg)

def format_card(card):
  return 'Resolves Trello card "%s" <%s>' % (card['name'], card['shortUrl'])

def get_card(key, token, board_id, member_name):
  """Uses the Trello REST API to print cards assigned to a member"""

  # Make GET request
  params = {'key': key, 'token': token}
  url = 'https://api.trello.com/1/boards/%s/members/%s/cards' % (board_id, member_name)
  response = requests.get(url, params=params)
  data = response.json()

  # Show user cards listing.
  count = len(data)
  max_len = len(str(count))
  print 'Your cards:'
  for i in range(count):
    card = data[i]
    print '  [%s] %s' % (string.rjust(str(i + 1), max_len, ' '), card['name'])
  print

  # Prompt user to choose a card.
  while True:
    choice = raw_input('Pick a card, any card [Q/%d-%d]: ' % (1, count))
    if choice == 'q' or choice == 'Q':
      return

    try:
      i = int(choice)
    except ValueError:
      continue

    if 1 <= i <= count:
      return data[i - 1]

if __name__ == '__main__':
  # Ensure all necessary parameters are defined.
  try:
    print 'Hello, %s!' % git_config('user', 'name')
    trello_key = git_config('trello', 'key')
    trello_token = git_config('trello', 'token')
    trello_board_id = git_config('trello', 'board-id')
    trello_member_name = git_config('trello', 'member-name')
  except ConfigAttributeError as e:
    message = '%s\nRun:\n\n    %s\n' % (e.msg, e.cmd)
    sys.stderr.write(message)
    sys.exit(1)

  # Ask user for card, and append it to commit message.
  card = get_card(trello_key, trello_token, trello_board_id, trello_member_name)
  if card is not None:
    msg = format_card(card)
    git_append(msg)

